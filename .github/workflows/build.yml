name: Build Linux Kernel Package

on:
  workflow_dispatch:
  schedule:
    - cron: '0 0 * * 5'  # Run every Friday at midnight
  push:
  pull_request:

jobs:
  build:
    runs-on: ubuntu-latest  # Still using Ubuntu runner to handle Docker setup

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3
    
    - name: Create more disk space
      run: |
        # Clean up unused software and language runtimes to free up space
        sudo rm -rf \
          "$AGENT_TOOLSDIRECTORY" \
          /opt/google/chrome \
          /opt/microsoft/msedge \
          /opt/microsoft/powershell \
          /opt/pipx \
          /usr/lib/mono \
          /usr/local/julia* \
          /usr/local/lib/android \
          /usr/local/lib/node_modules \
          /usr/local/share/chromium \
          /usr/local/share/powershell \
          /usr/share/dotnet \
          /usr/share/swift
        df -h /
        # Optionally, print disk space before/after cleanup for debugging
    
    - name: Set up Docker with Arch Linux
      run: |
        # Pull the latest Arch Linux image
        docker pull archlinux:latest

    - name: Build wine-wow64 inside Arch Linux container
      run: |
        # Run the build in a Docker container
        docker run --rm \
          -v $GITHUB_WORKSPACE:/workspace \
          -w /workspace \
          archlinux:latest bash -c "
            # Set up the environment inside the Arch container
            pacman -Sy --noconfirm base-devel git \
              bc cpio pahole perl python python-pip \
              graphviz imagemagick python-sphinx python-yaml \
              alsa-lib gst-plugins-base-libs libpulse libxcomposite libxcursor libxi libxinerama libxkbcommon libxrandr opencl-icd-loader pcsclite sdl2 unixodbc desktop-file-utils \
              libxxf86vm mesa mesa-libgl vulkan-icd-loader autoconf bison flex mingw-w64-gcc opencl-headers vulkan-headers samba sane \
              texlive-core texlive-latexextra rust rust-bindgen rust-src && \
            df -h
            # Replace makepkg.conf
            curl -o /etc/makepkg.conf https://raw.githubusercontent.com/CachyOS/docker-makepkg/refs/heads/master/docker-makepkg-v3/makepkg.conf && \
            # Create a non-root user and switch to it
            useradd -m builder && \
            # Ensure the builder user has permission to write to /workspace
            chown -R builder:builder /workspace && \
            # Switch to the builder user and run the build process
            su builder -c ' \
              # Set PKGDEST to /workspace/wine-wow64 and MAKEFLAGS for parallel builds
              export PKGDEST=/workspace/wine-wow64 && \
              export MAKEFLAGS=\"-j$(nproc)\" && \
              # Download dependencies (e.g., PGP keys) and source code
              git clone https://aur.archlinux.org/wine-wow64.git /workspace/wine-wow64 && \
              # Build the kernel package
              cd wine-wow64 && \
              makepkg && \
            df -h'  # Display disk space after the build
          "
    
    - name: Upload the kernel package artifact
      uses: actions/upload-artifact@v4
      with:
        name: wine-wow64-package
        path: wine-wow64/*.pkg.tar.zst
